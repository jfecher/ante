
a |> foo
b |> foo 2

a |> foo b c |> bar d e
bar d e <| foo b c <| a

1, 2 |> baz
baz <| 1, 2

1, 2 |> baz <| 3, 4

// two = 3 |> second 2
one = 3 |> (fn x -> x + x)
too = 3 |> second _ 2
three = 3 |> second 2 _

four = second 4 <| 5
fore = second _ 4 <| 5
five = second 4 _ <| 5

// args: --parse
// expected stdout:
// (foo a);
// (foo b 2);
// (bar (foo a b c) d e);
// (bar (foo a b c) d e);
// (baz (',' 1 2));
// (baz (',' 1 2));
// (baz (',' 1 2) (',' 3 4));
// (one = ('+' 3 3));
// (too = (second 3 2));
// (three = (second 2 3));
// (four = (second 5 4));
// (fore = (second 5 4));
// (five = (second 4 5))